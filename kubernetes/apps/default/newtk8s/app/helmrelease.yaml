---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: newt
  namespace: default
spec:
  interval: 6h
  chart:
    spec:
      chart: newt
      version: 1.1.0
      sourceRef:
        kind: HelmRepository
        name: fossorial
        namespace: flux-system
  values:
    global:
      logLevel: "INFO"
      resources:
        requests:
          cpu: "100m"
          memory: "128Mi"
          ephemeral-storage: "128Mi"
        limits:
          cpu: "200m"
          memory: "256Mi"
          ephemeral-storage: "256Mi"
    newtInstances:
      - name: "main-tunnel"
        enabled: true # ‚Üê This was the missing piece
        allowGlobalOverride: false
        auth:
          existingSecretName: ""
          keys:
            endpointKey: "PANGOLIN_ENDPOINT"
            idKey: "NEWT_ID"
            secretKey: "NEWT_SECRET"
        pangolinEndpoint: "https://pangolin.hayani.xyz"
        id: "o1dmghwxl799mca"
        secret: "256t2np06yomo9h3vxrm41djk8gdtlk1op08ai2ptlco6sly"
        healthFile: "/tmp/healthy"
        logLevel: "INFO"
        # mtu: 1280
        acceptClients: false
        useNativeInterface: false
        interface: "newt"
        # Add all the missing template fields to prevent nil pointer errors:
        mtls:
          enabled: false
          secretName: ""
          certPath: "/certs/client.p12"
          p12Base64: ""
        dockerSocket:
          enabled: false
          path: "/var/run/docker.sock"
          enforceNetworkValidation: false
        updown:
          enabled: false
          script: ""
          mountPath: "/opt/newt/updown"
          fileName: "updown.sh"
        service:
          enabled: true
          type: LoadBalancer
          port: 51820
          testerPort: 51821
          externalTrafficPolicy: ""
          loadBalancerIP: ""
          loadBalancerClass: ""
          loadBalancerSourceRanges: []
          nodePorts:
            wg: ""
            tester: ""
          annotations: {}
          labels: {}
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
            ephemeral-storage: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        nodeSelector: {}
        tolerations: []
        affinity: {}
        extraEnv: {}
        extraVolumes: []
        extraVolumeMounts: []
        initContainers: []
        extraContainers: []
        useCommandArgs: false
        hostNetwork: false
        hostPID: false
        podSecurityContext: {}
        securityContext: {}
        configFile: ""
        generateAndSaveKeyTo: ""
        keepInterface: false
        dns: ""
        pingInterval: ""
        pingTimeout: ""
