# ---
# apiVersion: postgres-operator.crunchydata.com/v1beta1
# kind: PostgresCluster
# metadata:
#   name: &name postgres-vector
#   # labels:
#   #   crunchy-users.henrywhitaker3.github.com/watch: "true"
#   # annotations:
#   #   crunchy-users.henrywhitaker3.github.com/superuser: "postgres"
#   #   crunchy-users.henrywhitaker3.github.com/extensions: |
#   #     [
#   #       {
#   #         "database": "immich_db",
#   #         "extension": "vectors"
#   #       },
#   #       {
#   #         "database": "immich_db",
#   #         "extension": "earthdistance",
#   #         "cascade": true
#   #       }
#   #     ]
# spec:
#   postgresVersion: 16
#   image: ghcr.io/drag0n141/cdpgvector:0.4.0@sha256:9a646daf58cdef4255a47093ec984cac2d779f802b256957831fa9c2a8f2a332
#   instances:
#     - name: postgres-vector
#       metadata:
#         labels:
#           app.kubernetes.io/name: crunchy-postgres-vector
#       replicas: &replica 3
#       dataVolumeClaimSpec:
#         storageClassName: openebs-hostpath
#         accessModes: ["ReadWriteOnce"]
#         resources:
#           requests:
#             storage: 5Gi
#       topologySpreadConstraints:
#         - maxSkew: 1
#           topologyKey: kubernetes.io/hostname
#           whenUnsatisfiable: DoNotSchedule
#           labelSelector:
#             matchLabels:
#               postgres-operator.crunchydata.com/cluster: *name
#               postgres-operator.crunchydata.com/data: postgres-vector
#   patroni:
#     dynamicConfiguration:
#       synchronous_mode: true
#       postgresql:
#         synchronous_commit: "on"
#         parameters:
#           max_connections: 500
#           shared_preload_libraries: "vectors.so"
#           search_path: '"$user", public, vectors"'
#         pg_hba:
#           - hostnossl all all 10.42.0.0/16 md5
#           - hostssl all all all md5
#   users:
#     # Superuser
#     - name: postgres
#       databases: ["postgres"]
#       options: SUPERUSER
#       password: &password
#         type: AlphaNumeric
#     # Applications
#     - name: immich
#       databases: ["immich_db"]
#       options: SUPERUSER
#       password: *password
#   backups:
#     pgbackrest:
#       configuration: &backupConfig
#         - secret:
#             name: crunchy-pgo-vector-secret
#       global: &backupFlag
#         archive-timeout: "60"
#         archive-push-queue-max: 4GiB
#         compress-type: lz4
#         compress-level: "9"
#         delta: "y"
#         repo1-bundle: "y"
#         repo1-block: "y"
#         repo1-retention-full-type: time
#         repo1-retention-full: "14"
#         repo1-retention-diff: "30"
#         repo1-path: "/crunchy-pgo-vector"
#         repo1-s3-uri-style: path
#         # repo1-s3-key: "${MINIO_KEY}"
#         # repo1-s3-key-secret: "${MINIO_SECRET_KEY}"
#         repo2-bundle: "y"
#         repo2-block: "y"
#         repo2-path: "/crunchy-pgo-vector"
#         repo2-s3-uri-style: "path"
#         # repo2-s3-key: "${R2_KEY}"
#         # repo2-s3-key-secret: "${R2_SECRET_KEY}"
#         repo2-retention-full-type: "time"
#         repo2-retention-full: "7"
#         repo2-retention-diff: "14"
#         repo2-cipher-type: "aes-256-cbc"
#       manual:
#         repoName: repo1
#         options: ["--type=full"]
#       metadata:
#         labels:
#           app.kubernetes.io/name: crunchy-postgres-vector-backup
#       repos:
#         - # Minio
#           name: repo1
#           s3: &minio
#             bucket: crunchy-pgo
#             endpoint: https://s3.${SECRET_DOMAIN}
#             region: us-east-1
#           schedules:
#             full: "0 1 * * 0" # Sunday at 1am
#             differential: "0 1 * * 1-6" # Mon-Sat at 1am
#             incremental: "0 3-23 * * *" # Every hour except 1-2am
#         - # iDrive E2
#           name: repo2
#           s3: &idrive
#             bucket: crunchy-pgo
#             endpoint: ${CPGO_R2_ENDPOINT}
#             region: us-east-1
#           schedules:
#             full: "0 2 * * 0" # Sunday at 2am
#             differential: "0 2 * * 1-6" # Mon-Sat at 2am
#       jobs:
#         ttlSecondsAfterFinished: 60
#   #  dataSource:
#   #    pgbackrest:                        # Restore with Vector does not work
#   #      stanza: db
#   #      configuration: *backupConfig
#   #      global: *backupFlag
#   #      repo:
#   #        name: repo1
#   #        s3: *minio
#   service:
#     type: LoadBalancer
#     metadata:
#       annotations:
#         external-dns.alpha.kubernetes.io/hostname: cpgo-vector.${SECRET_DOMAIN_INTERNAL}
#         lbipam.cilium.io/ips: 10.0.10.8
#   monitoring:
#     pgmonitor:
#       exporter:
#         resources:
#           requests:
#             cpu: 10m
#             memory: 64M
#           limits:
#             memory: 512M
#   proxy:
#     pgBouncer:
#       port: 5432
#       replicas: *replica
#       metadata:
#         labels:
#           app.kubernetes.io/name: crunchy-postgres-vector-pgbouncer
#       config:
#         global:
#           pool_mode: transaction
#           client_tls_sslmode: prefer
#           default_pool_size: "100"
#           max_client_conn: "500"
#       topologySpreadConstraints:
#         - maxSkew: 1
#           topologyKey: kubernetes.io/hostname
#           whenUnsatisfiable: DoNotSchedule
#           labelSelector:
#             matchLabels:
#               postgres-operator.crunchydata.com/cluster: *name
#               postgres-operator.crunchydata.com/role: pgbouncer-vector

---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name crunchy-postgres-vector
  labels:
    crunchy-userinit.ramblurr.github.com/enabled: "true"
    crunchy-userinit.ramblurr.github.com/superuser: &superuser "postgres"
spec:
  image: ghcr.io/benwalio/cdpgvecto.rs:ubi8-16.6-2-v0.3.0@sha256:5357f1251f76590bc036d1375f82ee5a7f0702336505d62d7408162018e7b4f6
  postgresVersion: 16
  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M

  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        max_wal_size: 5GB
        synchronous_commit: "on"
        parameters:
          max_connections: 500
          shared_preload_libraries: "vectors.so"
          search_path: '"$user", public, vectors"'
        pg_hba:
          - hostnossl all all 10.69.0.0/16 md5
          - hostssl all all all md5

  instances:
    - name: crunchy-postgres-vector
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-vector
      replicas: &replicas 1
      dataVolumeClaimSpec:
        storageClassName: openebs-hostpath
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 20Gi
      walVolumeClaimSpec:
        storageClassName: openebs-hostpath
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 20Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: crunchy-postgres-vector
  users:
    # Superuser
    - name: *superuser
      databases: ["postgres"]
      options: "SUPERUSER"
      password: &password
        type: AlphaNumeric
    # Applications
    - name: "immich"
      databases: ["immich"]
      options: "SUPERUSER"
      password: *password

  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: crunchy-pgo-vector-secret
      global: &backupFlag # Global
        compress-type: "bz2"
        compress-level: "9"
        # Minio
        repo1-block: "y"
        repo1-bundle: "y"
        repo1-path: /crunchy-pgo-vector
        repo1-retention-full: "30" # days
        repo1-retention-full-type: "time"
        repo1-s3-uri-style: path
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-vector-backup
      repos:
        - name: repo1
          s3: &minio
            bucket: crunchy-pgo-vector
            endpoint: s3.${SECRET_DOMAIN}
            region: us-east-1
          schedules:
            full: "15 1 * * 0" # Sunday at 01:15
            differential: "15 1 * * 1-6" # Mon-Sat at 01:15
            incremental: "15 3-23 * * *" # Every hour except 01:30-2:30

  # dataSource:
  #   pgbackrest:
  #     stanza: db
  #     configuration: *backupConfig
  #     global: *backupFlag
  #     repo:
  #       name: repo1
  #       s3: *minio

  proxy:
    pgBouncer:
      service:
        metadata:
          annotations:
            external-dns.alpha.kubernetes.io/hostname: cpgo-vector.${SECRET_DOMAIN}
            lbipam.cilium.io/ips: 10.0.10.8
        type: LoadBalancer
      port: 5432
      replicas: *replicas
      config:
        global:
          # Grafana requires session
          # Ref: https://github.com/grafana/grafana/issues/74260
          pool_mode: session
          client_tls_sslmode: prefer
          default_pool_size: "100"
          max_client_conn: "500"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: pgbouncer-vector
