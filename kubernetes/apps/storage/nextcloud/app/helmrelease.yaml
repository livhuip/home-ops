---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  timeout: 15m
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 6.6.9
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  # dependsOn:
  #   - name: rook-ceph-operator
  #     namespace: rook-ceph-external
  #   - name: volsync
  #     namespace: storage
  values:
    image:
      repository: nextcloud
      flavor: fpm-alpine
      tag: 31.0.2-fpm-alpine
      pullPolicy: IfNotPresent
    nginx:
      enabled: true
    nextcloud:
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:17.4
          envFrom:
            - secretRef:
                name: nextcloud-secret
      datadir: /var/www/data
      extraEnv:
        - name: REDIS_HOST
          value: dragonfly.database.svc.cluster.local.
        - name: REDIS_HOST_PORT
          value: "6379"
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        # smtpHostKey: smtp_host
        # smtpUsernameKey: smtp_username
        # smtpPasswordKey: smtp_password
      host: &host cloud.${SECRET_DOMAIN}
      # mail:
      #   enabled: true
      #   fromAddress: admin
      #   domain: ${SECRET_DOMAIN}
      securityContext:
        runAsUser: 1003
        runAsGroup: 100
        runAsNonRoot: true
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
              0 => '127.0.0.1',
              1 => '10.43.0.0/16',
              2 => '10.42.0.0/16',
            ),
            'trusted_domains' => array(
              0 => '127.0.0.1',
              1 => 'cloud.${SECRET_DOMAIN}',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
          ); ?>
        misc.config.php: |-
          <?php
          $CONFIG = array (
            'default_phone_region' => 'ZA',
            'maintenance_window_start' => 2,
          ); ?>
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres16-v2-rw.database.svc.cluster.local.
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: INIT_POSTGRES_USER
        passwordKey: INIT_POSTGRES_PASS
    ingress:
      enabled: true
      className: "external"
      annotations:
        external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      path: /
      pathType: Prefix
      # tls:
      # - hosts:
      #   - cloud.${SECRET_DOMAIN}
    persistence:
      enabled: true
      existingClaim: nextcloud
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-nfs
        accessMode: ReadWriteMany
    # this seems to be required for nextcloud initialization which takes a long time
    startupProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 20
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
# ---
# apiVersion: helm.toolkit.fluxcd.io/v2
# kind: HelmRelease
# metadata:
#   name: &app nextcloud
# spec:
#   interval: 1h
#   chartRef:
#     kind: OCIRepository
#     name: nextcloud
#   values:
#     deploymentLabels:
#       nfsMount: "true"
#     deploymentAnnotations:
#       reloader.stakater.com/auto: "true"
#     nextcloud:
#       host: &host cloud.${SECRET_DOMAIN}
#       extraVolumes:
#         - name: nfs-home
#           nfs:
#             server: "${NAS_IP}"
#             path: "/mnt/datastore/k3sdata/nextcloud"
#       extraVolumeMounts:
#         - name: nfs-home
#           mountPath: "/mnt/datastore/k3sdata/nextcloud"
#         # extraEnv:
#         #   - name: OIDC_CLIENT_ID
#         #     valueFrom:
#         #       secretKeyRef:
#         #         name: &secret nextcloud-secret
#         #         key: OIDC_CLIENT_ID
#         #   - name: OIDC_CLIENT_SECRET
#         #     valueFrom:
#         #       secretKeyRef:
#         #         name: *secret
#         #         key: OIDC_CLIENT_SECRET
#         # - name: REDIS_PASSWORD
#         #   valueFrom:
#         #     secretKeyRef:
#         #       name: &secret nextcloud-secret
#         #       key: REDIS_PASSWORD
#       existingSecret:
#         enabled: true
#         secretName: nextcloud-secret
#         usernameKey: ADMIN_USER
#         passwordKey: ADMIN_PASS
#         smtpHostKey: SMTP_HOST
#         smtpUsernameKey: SMTP_USERNAME
#         smtpPasswordKey: SMTP_PASSWORD
#       # mail:
#       #   enabled: true
#       #   fromAddress: nextcloud
#       #   domain: ${SECRET_DOMAIN}
#       #   smtp:
#       #     port: 2525
#       #     secure: NONE
#       #     authtype: NONE
#       defaultConfigs:
#         redis.config.php: false
#       configs:
#         local.config.php: |-
#           <?php
#           $CONFIG = array (
#             'trusted_proxies' =>
#             array (
#               0 => '127.0.0.1',
#               1 => '10.42.0.0/16',
#               2 => '10.43.0.0/16',
#             ),
#             'forwarded_for_headers' =>
#             array (
#               0 => 'HTTP_X_FORWARDED_FOR',
#             ),
#             'default_phone_region' => 'ZA',
#             'overwrite.cli.url' => 'https://cloud.${SECRET_DOMAIN}',
#             'overwriteprotocol' => 'https',
#             'quota_include_external_storage' => 'false',
#             'skeletondirectory' => '',
#             'knowledgebaseenabled' => 'false',
#             'maintenance_window_start' => '1',
#             'enable_previews' => false,
#             'trashbin_retention_obligation' => 'auto, 30',
#             'auth.bruteforce.protection.enabled' => true,
#           );
#         redis.config.php: |-
#           <?php
#           $CONFIG = array(
#             'memcache.distributed' => '\OC\Memcache\Redis',
#             'memcache.locking' => '\OC\Memcache\Redis',
#             'redis' => array(
#               'host' => 'dragonfly.database.svc.cluster.local',
#               'port' => getenv('REDIS_PORT') ?: 6379,
#               'dbindex' => getenv('REDIS_DATABASE') ?: 10,
#               'password' => getenv('REDIS_PASSWORD'),
#             ),
#           );
#         sso.config.php: |-
#           <?php
#           $CONFIG = array (
#             'allow_user_to_change_display_name' => false,
#             'lost_password_link' => 'disabled',
#             'oidc_login_client_id' => getenv('OIDC_CLIENT_ID'),
#             'oidc_login_client_secret' => getenv('OIDC_CLIENT_SECRET'),
#             'oidc_login_provider_url' => 'https://authelia.${SECRET_DOMAIN}',
#             'oidc_login_auto_redirect' => true, //login?noredir=1
#             'oidc_login_end_session_redirect' => true,
#             'oidc_login_button_text' => 'Log in with Authelia',
#             'oidc_login_hide_password_form' => true,
#             'oidc_login_use_id_token' => true,
#             'oidc_login_attributes' => array (
#                   'id' => 'preferred_username',
#                   'name' => 'name',
#                   'mail' => 'email',
#                   'groups' => 'groups',
#                   'login_filter' => 'groups',
#               ),
#             'oidc_login_default_group' => 'nextcloud',
#             'oidc_login_filter_allowed_values' => array('Nextcloud'),
#             'oidc_login_use_external_storage' => false,
#             'oidc_login_scope' => 'openid profile email groups',
#             'oidc_login_proxy_ldap' => false,
#             'oidc_login_disable_registration' => false,
#             'oidc_login_redir_fallback' => false,
#             'oidc_login_tls_verify' => true,
#             'oidc_create_groups' => true,
#             'oidc_login_webdav_enabled' => false,
#             'oidc_login_password_authentication' => false,
#             'oidc_login_public_key_caching_time' => 86400,
#             'oidc_login_min_time_between_jwks_requests' => 10,
#             'oidc_login_well_known_caching_time' => 86400,
#             'oidc_login_update_avatar' => false,
#           );
#       phpConfigs:
#         uploadLimit.ini: |
#           upload_max_filesize = 16G
#           post_max_size = 16G
#           max_input_time = 3600
#           max_execution_time = 3600
#         www.conf: |
#           [www]
#           user = www-data
#           group = www-data
#           listen = 127.0.0.1:9000
#           pm = dynamic
#           pm.max_children = 57
#           pm.start_servers = 14
#           pm.min_spare_servers = 14
#           pm.max_spare_servers = 42
#           pm.max_requests = 500
#           pm.process_idle_timeout = 10s
#     cronjob:
#       enabled: true
#     internalDatabase:
#       enabled: false
#     externalDatabase:
#       enabled: true
#       type: postgresql
#       existingSecret:
#         enabled: true
#         secretName: nextcloud-secret
#         usernameKey: POSTGRES_USER
#         passwordKey: POSTGRES_PASSWORD
#         hostKey: POSTGRES_HOST
#         databaseKey: POSTGRES_DB
#     livenessProbe:
#       enabled: false
#     readinessProbe:
#       enabled: false
#     startupProbe:
#       enabled: false
#     # ingress:
#     #   enabled: true
#     #   className: traefik-external
#     #   annotations:
#     #     external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
#     #     external-dns.alpha.kubernetes.io/exclude-unifi: "true"
#     #     external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
#     #     traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
#     #     traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
#     #   path: /
#     #   pathType: Prefix
#     #   tls:
#     #     - hosts:
#     #         - *host
#     #       secretName: "${SECRET_DOMAIN/./-}-production-tls"
#     ingress:
#       enabled: true
#       className: "external"
#       annotations:
#         external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
#         nginx.ingress.kubernetes.io/proxy-body-size: "10G"
#         nginx.ingress.kubernetes.io/proxy-buffering: "off"
#         nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
#         nginx.ingress.kubernetes.io/server-snippet: |-
#           server_tokens off;
#           proxy_hide_header X-Powered-By;

#           rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
#           rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
#           rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
#           location = /.well-known/carddav {
#             return 301 $scheme://$host/remote.php/dav;
#           }
#           location = /.well-known/caldav {
#             return 301 $scheme://$host/remote.php/dav;
#           }
#           location = /robots.txt {
#             allow all;
#             log_not_found off;
#             access_log off;
#           }
#           location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
#             deny all;
#           }
#           location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
#             deny all;
#           }
#       path: /
#       pathType: Prefix
#       # tls:
#       # - hosts:
#       #   - cloud.${SECRET_DOMAIN}
#     persistence:
#       enabled: true
#       existingClaim: *app
