# ---
# # yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
# apiVersion: helm.toolkit.fluxcd.io/v2
# kind: HelmRelease
# metadata:
#   name: sonarr
# spec:
#   interval: 30m
#   chart:
#     spec:
#       chart: app-template
#       version: 3.6.0
#       sourceRef:
#         kind: HelmRepository
#         name: bjw-s
#         namespace: flux-system
#   install:
#     remediation:
#       retries: 3
#   upgrade:
#     cleanupOnFail: true
#     remediation:
#       retries: 3
#       strategy: rollback
#   values:
#     controllers:
#       sonarr:
#         annotations:
#           reloader.stakater.com/auto: "true"
#         containers:
#           app:
#             image:
#               repository: ghcr.io/onedr0p/sonarr-develop
#               tag: 4.0.12.2825
#             env:
#               SONARR__APP__INSTANCENAME: Sonarr
#               SONARR__APP__THEME: dark
#               SONARR__AUTH__METHOD: External
#               SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
#               SONARR__LOG__DBENABLED: "False"
#               SONARR__LOG__LEVEL: info
#               SONARR__SERVER__PORT: &port 80
#               SONARR__UPDATE__BRANCH: develop
#               TZ: America/Chicago
#             envFrom:
#               - secretRef:
#                   name: sonarr-secret
#             probes:
#               liveness: &probes
#                 enabled: true
#                 custom: true
#                 spec:
#                   httpGet:
#                     path: /ping
#                     port: *port
#                   initialDelaySeconds: 0
#                   periodSeconds: 30
#                   timeoutSeconds: 5
#                   failureThreshold: 3
#               readiness: *probes
#               startup:
#                 enabled: false
#             securityContext:
#               allowPrivilegeEscalation: false
#               readOnlyRootFilesystem: true
#               capabilities: { drop: ["ALL"] }
#         pod:
#           securityContext:
#             runAsUser: 568
#             runAsGroup: 568
#             runAsNonRoot: true
#             fsGroup: 568
#             fsGroupChangePolicy: OnRootMismatch
#             supplementalGroups: [10000]
#     service:
#       app:
#         controller: sonarr
#         ports:
#           http:
#             port: *port
#     ingress:
#       main:
#         enabled: true
#         className: internal-nginx
#         hosts:
#           - host: &host "{{ .Release.Name }}.jahanson.tech"
#             paths:
#               - path: /
#                 service:
#                   identifier: app
#                   port: http
#         tls:
#           - hosts:
#               - *host
#       tailscale:
#         enabled: true
#         className: tailscale
#         hosts:
#           - host: &host "{{ .Release.Name }}.meerkat-dab.ts.net"
#             paths:
#               - path: /
#                 service:
#                   identifier: app
#                   port: http
#         tls:
#           - hosts:
#               - *host
#     persistence:
#       config:
#         enabled: true
#         existingClaim: sonarr
#       tmp:
#         type: emptyDir
#       media:
#         type: nfs
#         server: 10.1.1.61
#         path: /eru/media
#         globalMounts:
#           - path: /data/nas-media
#       moria-media:
#         type: nfs
#         server: 10.1.1.61
#         path: /moria/media/
#         globalMounts:
#           - path: /data/moria-media
#       scripts:
#         type: configMap
#         name: sonarr-configmap
#         defaultMode: 0775
#         globalMounts:
#           - path: /scripts/pushover-notify.sh
#             subPath: pushover-notify.sh
#             readOnly: true
#           - path: /scripts/refresh-series.sh
#             subPath: refresh-series.sh
#             readOnly: true

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      sonarr:
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.14.2938
            env:
              TZ: ${TIMEZONE}
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: debug
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
            envFrom:
              - secretRef:
                  name: sonarr-secret
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 1024Mi
    service:
      main:
        controller: sonarr
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "300"

          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Sonarr
          gethomepage.dev/icon: sonarr.png
          gethomepage.dev/description: TV Downloads
          gethomepage.dev/widget.type: sonarr
          gethomepage.dev/widget.url: http://sonarr.media
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_SONARR_TOKEN}}`}}"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
    defaultPodOptions:
      enableServiceLinks: true
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
    persistence:
      config:
        enabled: true
        existingClaim: sonarr
      media:
        enabled: true
        type: nfs
        globalMounts:
          - path: /Media
        server: "${NAS_IP}"
        path: "/mnt/datastore/mediacentre"
    podAnnotations:
      secret.reloader.stakater.com/reload: sonarr
    resources:
      limits:
        memory: 1024Mi
