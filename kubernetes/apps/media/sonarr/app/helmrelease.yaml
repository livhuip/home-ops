---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      sonarr:
        containers:
          main:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.16.2942@sha256:a986ef3682f1b94e2832a31ace57057279bd4ffdf49190a1b5f9f8d3cef875f5
            env:
              TZ: ${TIMEZONE}
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: debug
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
            envFrom:
              - secretRef:
                  name: sonarr-secret
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 1024Mi
    service:
      app:
        controller: sonarr
        ports:
          http:
            port: *port
    # ingress:
    #   app:
    #     enabled: true
    #     className: internal
    #     annotations:
    #       nginx.ingress.kubernetes.io/proxy-request-buffering: "on"
    #       nginx.ingress.kubernetes.io/proxy-body-size: "100m" # Add this to allow large requests
    #       nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    #       nginx.ingress.kubernetes.io/proxy-send-timeout: "300"

    #       gethomepage.dev/enabled: "true"
    #       gethomepage.dev/group: Media
    #       gethomepage.dev/name: Sonarr
    #       gethomepage.dev/icon: sonarr.png
    #       gethomepage.dev/description: TV Downloads
    #       gethomepage.dev/widget.type: sonarr
    #       gethomepage.dev/widget.url: http://sonarr.media
    #       gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_SONARR_TOKEN}}`}}"
    #     hosts:
    #       - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #             service:
    #               identifier: app
    #               port: http
    # tls:
    #   - hosts:
    #       - *host
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host sonarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    # route:
    #   app:
    #     hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
    #     parentRefs:
    #       - name: internal
    #         namespace: kube-system
    #         sectionName: https
    #     rules:
    #       - backendRefs:
    #           - identifier: app
    #             port: *port
    defaultPodOptions:
      enableServiceLinks: true
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
    persistence:
      config:
        enabled: true
        existingClaim: sonarr
      media:
        enabled: true
        type: nfs
        globalMounts:
          - path: /Media
        server: "${NAS_IP}"
        path: "/mnt/datastore/mediacentre"
    podAnnotations:
      secret.reloader.stakater.com/reload: sonarr
    resources:
      limits:
        memory: 1024Mi
