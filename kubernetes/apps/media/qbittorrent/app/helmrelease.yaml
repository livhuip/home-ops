# ---
# # yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
# apiVersion: helm.toolkit.fluxcd.io/v2
# kind: HelmRelease
# metadata:
#   name: qbittorrent
# spec:
#   interval: 30m
#   chart:
#     spec:
#       chart: app-template
#       version: 3.7.3
#       sourceRef:
#         kind: HelmRepository
#         name: bjw-s
#         namespace: flux-system
#   install:
#     remediation:
#       retries: 3
#   upgrade:
#     cleanupOnFail: true
#     remediation:
#       strategy: rollback
#       retries: 3
#   dependsOn:
#     - name: rook-ceph-cluster
#       namespace: rook-ceph
#   values:
#     controllers:
#       qbittorrent:
#         annotations:
#           reloader.stakater.com/auto: "true"
#         containers:
#           app:
#             image:
#               repository: ghcr.io/onedr0p/qbittorrent-beta
#               tag: 5.0.3@sha256:4b9de3356475bd97fda3fb4d98f213e8d139aef15e7bd20dab72973e661901dd
#             env:
#               TZ: ${TIMEZONE}
#               QBT_WEBUI_PORT: &port 80
#               QBT_TORRENTING_PORT: &torrentPort 61144
#               CROSS_SEED_ENABLED: false
#               CROSS_SEED_HOST: cross-seed.media.svc.cluster.local
#               CROSS_SEED_PORT: 80
#               CROSS_SEED_SLEEP_INTERVAL: 0
#               PUSHOVER_ENABLED: true
#             envFrom:
#               - secretRef:
#                   name: qbittorrent-secret
#             probes:
#               liveness:
#                 enabled: false
#               readiness:
#                 enabled: false
#               startup:
#                 enabled: false
#                 spec:
#                   failureThreshold: 30
#                   periodSeconds: 10
#             securityContext:
#               allowPrivilegeEscalation: false
#               readOnlyRootFilesystem: true
#               capabilities: { drop: ["ALL"] }
#             resources:
#               requests:
#                 cpu: 100m
#               limits:
#                 memory: 8Gi
#     defaultPodOptions:
#       securityContext:
#         runAsNonRoot: true
#         runAsUser: 568
#         runAsGroup: 568
#         fsGroup: 568
#         fsGroupChangePolicy: OnRootMismatch
#         seccompProfile: { type: RuntimeDefault }
#     service:
#       app:
#         controller: qbittorrent
#         type: LoadBalancer
#         annotations:
#           lbipam.cilium.io/ips: 10.45.10.19
#         ports:
#           http:
#             port: *port
#           bittorrent:
#             enabled: true
#             port: *torrentPort
#             protocol: TCP
#     ingress:
#       app:
#         annotations:
#           external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
#         className: internal
#         hosts:
#           - host: qb.${SECRET_DOMAIN}
#             paths:
#               - path: /
#                 service:
#                   identifier: app
#                   port: http
#     persistence:
#       config:
#         existingClaim: qbittorrent
#       tmp:
#         type: emptyDir
#       scripts:
#         type: configMap
#         name: qbittorrent-scripts
#         defaultMode: 0775
#         globalMounts:
#           - readOnly: true
#       media:
#         enabled: true
#         type: nfs
#         globalMounts:
#           - path: /Media
#         server: "${NAS_IP}"
#         path: "/mnt/cdatacentre/mediacentre"
#     resources:
#       limits:
#         memory: 1Gi

---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app qbittorrent
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      qbittorrent:
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/qbittorrent
              tag: 5.1.2@sha256:a724f86a39fa637fc4ff81165585d7273dc9dcd9ca59818a34e9fa9c467dd26c
            env:
              TZ: ${TIMEZONE}
              QBT_WEBUI_PORT: &port 80
              QBT_TORRENTING_PORT: &torrentPort 50413
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v2/app/version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 8Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
    fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: qbittorrent
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: 10.0.10.10
        ports:
          http:
            primary: true
            port: *port
          bittorrent:
            enabled: true
            port: *torrentPort
            protocol: TCP
    # route:
    #   app:
    #     hostnames:
    #       - "{{ .Release.Name }}.${SECRET_DOMAIN}"
    #       - qb.${SECRET_DOMAIN}
    #     parentRefs:
    #       - name: internal
    #         namespace: kube-system
    #         sectionName: https
    #     rules:
    #       - backendRefs:
    #           - name: *app
    #             port: *port
    ingress:
      app:
        # annotations:
        #   external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        className: internal
        hosts:
          - host: qb.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: qbittorrent
      media:
        type: nfs
        server: ${NAS_IP}
        path: /mnt/datastore/mediacentre
        globalMounts:
          - path: /Media/Downloads/qbittorrent
            subPath: Downloads/qbittorrent
      tmp:
        type: emptyDir
