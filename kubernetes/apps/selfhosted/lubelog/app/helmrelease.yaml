---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lubelog
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      lubelog:
        labels:
          postgres: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/hargata/lubelogger
              tag: v1.4.7
            env:
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: "lubelog-secret"
            resources:
              requests:
                cpu: 15m
                memory: 80M
              limits:
                memory: 256M
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1003
        runAsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8080
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: apps
          gethomepage.dev/name: lubelog
          gethomepage.dev/icon: sh-lubelogger.png
          gethomepage.dev/description: Car Service Tracking
          gethomepage.dev/widget.type: lubelogger
          gethomepage.dev/widget.url: http://lubelog.selfhosted:8080
          gethomepage.dev/widget.username: "{{ `{{HOMEPAGE_VAR_SVC_LUBEL_USERNAME}}` }}"
          gethomepage.dev/widget.password: "{{ `{{HOMEPAGE_VAR_SVC_LUBEL_PASSWORD}}` }}"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http

      tailscale:
        className: tailscale
        hosts:
          - host: &tshost "{{ .Release.Name }}.${SECRET_TS_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *tshost

    persistence:
      app:
        existingClaim: *app
        globalMounts:
          - path: /App/config
            subPath: config
          - path: /App/data
            subPath: data
          - path: /App/wwwroot/translations
            subPath: translations
          - path: /App/wwwroot/documents
            subPath: documents
          - path: /App/wwwroot/images
            subPath: images
          - path: /App/log
            subPath: log
          - path: /root/.aspnet/DataProtection-Keys
            subPath: keys

      tmp:
        type: emptyDir
        globalMounts:
          - path: /App/wwwroot/temp
