---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: nextcloud
  values:
    deploymentLabels:
      nfsMount: "true"
    deploymentAnnotations:
      reloader.stakater.com/auto: "true"
    nextcloud:
      datadir: /var/www/html/data
      host: &host cloud.${SECRET_DOMAIN}
      # extraVolumes:
      #   - name: nfs-home
      #     nfs:
      #       server: "${NAS_IP}"
      #       path: "/mnt/datastore/nextcloud_data"
      # extraVolumeMounts:
      #   - name: nfs-home
      #     mountPath: "/var/www/html/data"
      extraEnv:
        - name: OIDC_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: &secret nextcloud-secret
              key: OIDC_CLIENT_ID
        - name: OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: *secret
              key: OIDC_CLIENT_SECRET
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: *secret
              key: REDIS_PASSWORD
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: ADMIN_USER
        passwordKey: ADMIN_PASS
        smtpHostKey: SMTP_HOST
        smtpUsernameKey: SMTP_USERNAME
        smtpPasswordKey: SMTP_PASSWORD
      mail:
        enabled: true
        fromAddress: nextcloud
        domain: ${SECRET_DOMAIN}
        smtp:
          port: 2525
          secure: NONE
          authtype: NONE
      defaultConfigs:
        redis.config.php: false
      configs:
        local.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' =>
            array (
              0 => '127.0.0.1',
              1 => '10.42.0.0/16',
              2 => '10.43.0.0/16',
            ),
            'forwarded_for_headers' =>
            array (
              0 => 'HTTP_X_FORWARDED_FOR',
            ),
            'default_phone_region' => 'DE',
            'overwrite.cli.url' => 'https://cloud.${SECRET_DOMAIN}',
            'overwriteprotocol' => 'https',
            'quota_include_external_storage' => 'false',
            'skeletondirectory' => '',
            'knowledgebaseenabled' => 'false',
            'maintenance_window_start' => '1',
            'enable_previews' => false,
            'trashbin_retention_obligation' => 'auto, 30',
            'auth.bruteforce.protection.enabled' => true,
          );
        redis.config.php: |-
          <?php
          $CONFIG = array(
            'memcache.distributed' => '\OC\Memcache\Redis',
            'memcache.locking' => '\OC\Memcache\Redis',
            'redis' => array(
              'host' => 'dragonfly.database.svc.cluster.local',
              'port' => getenv('REDIS_PORT') ?: 6379,
              'dbindex' => getenv('REDIS_DATABASE') ?: 10,
              'password' => getenv('REDIS_PASSWORD'),
            ),
          );
        sso.config.php: |-
          <?php
          $CONFIG = array (
            'allow_user_to_change_display_name' => false,
            'lost_password_link' => 'disabled',
            'oidc_login_client_id' => getenv('OIDC_CLIENT_ID'),
            'oidc_login_client_secret' => getenv('OIDC_CLIENT_SECRET'),
            'oidc_login_provider_url' => 'https://sso.${SECRET_DOMAIN}/application/o/nextcloud/',
            'oidc_login_auto_redirect' => true, //login?noredir=1
            'oidc_login_end_session_redirect' => true,
            'oidc_login_button_text' => 'Log in with Authentik',
            'oidc_login_hide_password_form' => true,
            'oidc_login_use_id_token' => true,
            'oidc_login_attributes' => array (
                  'id' => 'preferred_username',
                  'name' => 'name',
                  'mail' => 'email',
                  'groups' => 'groups',
                  'login_filter' => 'groups',
              ),
            'oidc_login_default_group' => 'nextcloud',
            'oidc_login_filter_allowed_values' => array('Nextcloud'),
            'oidc_login_use_external_storage' => false,
            'oidc_login_scope' => 'openid profile email groups',
            'oidc_login_proxy_ldap' => false,
            'oidc_login_disable_registration' => false,
            'oidc_login_redir_fallback' => false,
            'oidc_login_tls_verify' => true,
            'oidc_create_groups' => true,
            'oidc_login_webdav_enabled' => false,
            'oidc_login_password_authentication' => false,
            'oidc_login_public_key_caching_time' => 86400,
            'oidc_login_min_time_between_jwks_requests' => 10,
            'oidc_login_well_known_caching_time' => 86400,
            'oidc_login_update_avatar' => false,
          );
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
        www.conf: |
          [www]
          user = www-data
          group = www-data
          listen = 127.0.0.1:9000
          pm = dynamic
          pm.max_children = 57
          pm.start_servers = 14
          pm.min_spare_servers = 14
          pm.max_spare_servers = 42
          pm.max_requests = 500
          pm.process_idle_timeout = 10s
    cronjob:
      enabled: true
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: POSTGRES_USER
        passwordKey: POSTGRES_PASSWORD
        hostKey: POSTGRES_HOST
        databaseKey: POSTGRES_DB
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: false
    ingress:
      enabled: true
      className: internal
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: document
        gethomepage.dev/name: nextcloud
        gethomepage.dev/icon: sh-nextcloud.svg
        # gethomepage.dev/widget.type: nextcloud
        # gethomepage.dev/widget.url: https://nextcloud.${SECRET_DOMAIN}
        # gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SVC_NXC_TOKEN}}` }}"
        external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/affinity: cookie
        nginx.ingress.kubernetes.io/server-snippet: |
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      path: /
      pathType: Prefix
    persistence:
      config:
        enabled: true
        existingClaim: *app
