{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/fosrl/helm-charts/charts/newt/values.schema.json",
  "title": "Newt values schema",
  "description": "Values schema for the Newt Helm chart.",
  "type": "object",
  "properties": {
    "metrics": {
      "type": "object",
      "description": "Alias of global.metrics (deprecated).",
      "properties": {
        "enabled": {"type": "boolean"},
        "port": {"type": "integer"},
        "path": {"type": "string"},
        "annotations": {"type": "object", "additionalProperties": {"type": "string"}},
        "portName": {"type": "string"},
        "targetPortName": {"type": "string"},
        "service": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "type": {"type": "string"}, "port": {"type": "integer"}, "portName": {"type": "string"}, "annotations": {"type": "object", "additionalProperties": {"type": "string"}}}},
        "podMonitor": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "apiVersion": {"type": "string"}, "namespace": {"type": "string"}}},
        "serviceMonitor": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "apiVersion": {"type": "string"}, "namespace": {"type": "string"}, "jobLabel": {"type": "string"}, "scheme": {"type": "string"}}},
        "prometheusRule": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "apiVersion": {"type": "string"}, "namespace": {"type": "string"}}}
      },
      "additionalProperties": {}
    },
    "rbac": {
      "type": "object",
      "description": "Chart-level RBAC configuration.",
      "properties": {
        "create": {"type": "boolean", "description": "Create RBAC resources."},
        "clusterRole": {"type": "boolean", "description": "Use ClusterRole/Binding instead of namespaced Role/Binding."},
        "annotations": {"type": ["object", "null"], "additionalProperties": {"type": "string"}, "description": "RBAC resource annotations."},
        "labels": {"type": ["object", "null"], "additionalProperties": {"type": "string"}, "description": "RBAC resource labels."}
      }
    },
    "serviceAccount": {
      "type": "object",
      "description": "ServiceAccount settings.",
      "properties": {
        "create": {"type": "boolean", "description": "Create a ServiceAccount resource."},
        "name": {"type": "string", "description": "Name of the ServiceAccount to use (empty = generated when create=true, else 'default')."},
        "annotations": {"type": ["object", "null"], "additionalProperties": {"type": "string"}, "description": "Annotations for the ServiceAccount."},
        "automountServiceAccountToken": {"type": "boolean", "description": "Whether to automount the SA token on pods."}
      }
    },
    "global": {
      "type": "object",
      "description": "Global parameters and shared metadata",
      "properties": {
        "image": {
          "type": "object",
          "description": "Global Docker image settings",
          "properties": {
            "registry": {"type": "string", "description": "Global image registry."},
            "repository": {"type": "string", "description": "Global image repository override."},
            "tag": {"type": "string", "description": "Global image tag (overridden by digest)."},
            "digest": {"type": "string", "description": "Global image digest (sha256:...)."},
            "imagePullPolicy": {"type": "string", "description": "Global image pull policy."},
            "imagePullSecrets": {
              "type": ["array", "null"],
              "description": "Registry pull secrets.",
              "items": {
                "oneOf": [
                  {"type": "string"},
                  {"type": "object", "properties": {"name": {"type": "string"}}, "required": ["name"]}
                ]
              }
            }
          }
        },
        "nameOverride": {"type": "string", "description": "Override chart name for resource names."},
        "fullnameOverride": {"type": "string", "description": "Override full release name."},
        "namespaceOverride": {"type": "string", "description": "Override target namespace."},
        "additionalLabels": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Extra labels applied to all resources."},
        "additionalAnnotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Extra annotations applied to all resources."},
        "additionalServiceLabels": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Extra labels applied to external Services."},
        "additionalServiceAnnotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Extra annotations applied to external Services."},
        "statefulsetAnnotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Annotations added to all StatefulSets."},
        "deploymentAnnotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Annotations added to all Deployments."},
        "deploymentLabels": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Labels added to all Deployments."},
        "podAnnotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Annotations added to all Pods."},
        "podLabels": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Labels added to all Pods."},
        "extraEnv": {"type": ["object", "null"], "additionalProperties": {"type": "string"}, "description": "Extra environment variables injected into all containers."},
        "revisionHistoryLimit": {"type": "integer", "minimum": 0, "description": "Global revision history limit."},
        "logLevel": {"type": "string", "description": "Global log level."},
        "networkPolicy": {
          "type": "object",
          "description": "NetworkPolicy defaults.",
          "properties": {
            "create": {"type": "boolean", "description": "Create NetworkPolicies."},
            "defaultDenyIngress": {"type": "boolean", "description": "Apply default deny ingress."}
          }
        },
        "priorityClassName": {"type": "string", "description": "PriorityClass name applied to Pods."},
        "nodeSelector": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Node selector applied to Pods."},
        "tolerations": {"type": "array", "items": {"type": "object"}, "description": "Tolerations applied to Pods."},
        "nativeMode": {
          "type": "object",
          "description": "Global native WireGuard enable gate",
          "properties": {
            "enabled": {"type": "boolean", "description": "Enable native WireGuard support"}
          }
        },
        "notes": {
          "type": "object",
          "description": "NOTES output customization",
          "properties": {
            "defaultTraefikTarget": {"type": "string", "description": "Default Traefik service target"}
          }
        },
        "updownScripts": {
          "type": "object",
          "description": "Map of embedded up/down script contents",
          "additionalProperties": {"type": "string"}
        },
        "health": {
          "type": "object",
          "description": "Health probe (file) settings",
          "properties": {
            "enabled": {"type": "boolean", "description": "Enable probes"},
            "path": {"type": "string", "description": "Default health file path"},
            "readinessFailureThreshold": {"type": "integer", "minimum": 0, "description": "Readiness failure threshold"}
          }
        },
        "resources": {
          "type": "object",
          "description": "Global default resources for all instances.",
          "properties": {
            "requests": {
              "type": "object",
              "properties": {
                "cpu": {"type": "string", "description": "CPU request."},
                "memory": {"type": "string", "description": "Memory request."},
                "ephemeral-storage": {"type": "string", "description": "Ephemeral storage request."}
              }
            },
            "limits": {
              "type": "object",
              "properties": {
                "cpu": {"type": "string", "description": "CPU limit."},
                "memory": {"type": "string", "description": "Memory limit."},
                "ephemeral-storage": {"type": "string", "description": "Ephemeral storage limit."}
              }
            }
          }
        },
        "tests": {
          "type": "object",
          "description": "Helm tests configuration.",
          "properties": {
            "enabled": {"type": "boolean"},
            "image": {
              "type": "object",
              "properties": {
                "repository": {"type": "string"},
                "tag": {"type": "string"},
                "pullPolicy": {"type": "string"}
              }
            }
          }
        },
        "podDisruptionBudget": {
          "type": "object",
          "description": "Optional PodDisruptionBudget for all instances (per-instance selector).",
          "properties": {
            "enabled": {"type": "boolean", "description": "Enable PodDisruptionBudget creation."},
            "minAvailable": {"oneOf": [{"type": "integer"}, {"type": "string"}], "description": "Minimum available pods (int or percentage)."},
            "maxUnavailable": {"oneOf": [{"type": "integer"}, {"type": "string"}], "description": "Maximum unavailable pods (int or percentage)."},
            "labels": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Additional PDB labels."},
            "annotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Additional PDB annotations."}
          }
        },
        "metrics": {
          "type": "object",
          "description": "Metrics / Prometheus scrape settings",
          "properties": {
            "enabled": {"type": "boolean", "description": "Enable metrics scrape annotations"},
            "port": {"type": "integer", "description": "Metrics port"},
            "path": {"type": "string", "description": "Metrics path"},
            "annotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Custom metrics annotations"},
            "portName": {"type": "string", "description": "Optional metrics Service port name."},
            "targetPortName": {"type": "string", "description": "Container port name to target instead of number."},
            "service": {
              "type": "object",
              "properties": {
                "enabled": {"type": "boolean", "description": "Create metrics Service for scraping."},
                "type": {"type": "string", "enum": ["ClusterIP", "LoadBalancer", "NodePort"], "description": "Service type for metrics."},
                "port": {"type": "integer", "description": "Metrics Service port."},
                "portName": {"type": "string", "description": "Metrics Service port name."},
                "annotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Service annotations."}
              }
            },
            "podMonitor": {
              "type": "object",
              "properties": {
                "enabled": {"type": "boolean", "description": "Create PodMonitor resource."},
                "apiVersion": {"type": "string", "description": "API version for PodMonitor."},
                "namespace": {"type": "string", "description": "Optional namespace override."},
                "portName": {"type": "string", "description": "Port name to scrape."},
                "scheme": {"type": "string", "description": "HTTP scheme."},
                "path": {"type": "string", "description": "HTTP path to scrape."},
                "interval": {"type": "string", "description": "Scrape interval."},
                "scrapeTimeout": {"type": "string", "description": "Scrape timeout."},
                "honorLabels": {"type": "boolean", "description": "Honor labels from target."},
                "labels": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Extra labels."},
                "annotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Extra annotations."},
                "relabelings": {"type": "array", "items": {"type": "object"}, "description": "Relabeling rules."},
                "metricRelabelings": {"type": "array", "items": {"type": "object"}, "description": "Metric relabeling rules."}
              }
            },
            "serviceMonitor": {
              "type": "object",
              "properties": {
                "enabled": {"type": "boolean", "description": "Create ServiceMonitor resource."},
                "apiVersion": {"type": "string", "description": "API version for ServiceMonitor."},
                "namespace": {"type": "string", "description": "Optional namespace override."},
                "labels": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Extra labels on ServiceMonitor."},
                "interval": {"type": "string", "description": "Scrape interval."},
                "scrapeTimeout": {"type": "string", "description": "Scrape timeout."},
                "jobLabel": {"type": "string", "description": "Job label override."},
                "scheme": {"type": "string", "description": "HTTP scheme."},
                "relabelings": {"type": "array", "items": {"type": "object"}, "description": "Relabeling rules."},
                "metricRelabelings": {"type": "array", "items": {"type": "object"}, "description": "Metric relabeling rules."},
                "targetLabels": {"type": "array", "items": {"type": "string"}, "description": "Target labels to transfer."},
                "sampleLimit": {"type": "integer", "description": "Sample limit per target (0 unlimited)."}
              }
            },
            "prometheusRule": {
              "type": "object",
              "properties": {
                "enabled": {"type": "boolean", "description": "Create PrometheusRule resource."},
                "apiVersion": {"type": "string", "description": "API version for PrometheusRule."},
                "namespace": {"type": "string", "description": "Optional namespace override."},
                "labels": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Extra labels on PrometheusRule."},
                "rules": {"type": "array", "items": {"type": "object"}, "description": "Array of rule groups/rules."}
              }
            }
          },
          "allOf": [
            {
              "if": {"properties": {"enabled": {"const": true}}},
              "then": {"required": ["path", "port"]}
            },
            {
              "not": {
                "allOf": [
                  {"properties": {"podMonitor": {"properties": {"enabled": {"const": true}}}}},
                  {"properties": {"serviceMonitor": {"properties": {"enabled": {"const": true}}}}}
                ]
              }
            },
            {
              "if": {"properties": {"serviceMonitor": {"properties": {"enabled": {"const": true}}}}},
              "then": {
                "properties": {
                  "service": {"properties": {"enabled": {"const": true}}, "required": ["enabled"]}
                }
              }
            },
            {
              "if": {"properties": {"podMonitor": {"properties": {"enabled": {"const": true}}}}},
              "then": {"properties": {}}
            }
          ]
        }
      }
    },
    "image": {
      "type": "object",
      "description": "Chart-level image settings (fallback)",
      "properties": {
        "repository": {"type": "string", "description": "Container image repository."},
        "tag": {"type": "string", "description": "Image tag (ignored if digest set)."},
        "pullPolicy": {"type": "string", "enum": ["Always", "IfNotPresent", "Never"], "description": "Image pull policy."},
        "digest": {"type": "string", "description": "Image digest (sha256:...)."}
      }
    },
    "newtInstances": {
      "type": "array",
      "description": "Array of Newt client instances",
      "items": {
        "type": "object",
        "properties": {
          "name": {"type": "string", "description": "Instance name (DNS-1123)", "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$", "minLength": 1, "maxLength": 63},
          "enabled": {"type": "boolean", "description": "Enable this instance."},
          "replicas": {"type": "integer", "minimum": 0, "description": "Replica count."},
          "allowGlobalOverride": {"type": "boolean", "description": "Allow this instance to override global settings (image, logLevel, resources, podSecurityContext, securityContext)."},
          "pangolinEndpoint": {"type": "string", "description": "Pangolin endpoint URL"},
          "id": {"type": "string", "description": "Instance ID."},
          "secret": {"type": "string", "description": "Instance secret/key."},
          "healthFile": {"type": "string", "description": "File path used for liveness/readiness."},
          "logLevel": {"type": "string", "description": "Per-instance log level (overrides global when allowGlobalOverride=true)."},
          "mtu": {"type": "integer", "description": "Interface MTU."},
          "dns": {"type": "string", "description": "DNS server to use."},
          "pingInterval": {"type": "string", "description": "Ping interval."},
          "pingTimeout": {"type": "string", "description": "Ping timeout."},
          "acceptClients": {"type": "boolean", "description": "Accept client connections."},
          "useNativeInterface": {"type": "boolean", "description": "Use native WireGuard interface."},
          "interface": {"type": "string", "description": "Interface name."},
          "keepInterface": {"type": "boolean", "description": "Keep interface on shutdown."},
          "configFile": {"type": "string", "description": "Path to config.json to load at startup (ENV CONFIG_FILE)."},
          "generateAndSaveKeyTo": {"type": "string", "description": "Path to save generated private key (ENV GENERATE_AND_SAVE_KEY_TO)."},
          "dockerSocket": {"type": "object", "description": "Docker socket exposure settings.", "properties": {"enabled": {"type": "boolean", "description": "Mount Docker socket."}, "path": {"type": "string", "description": "Docker socket path."}, "enforceNetworkValidation": {"type": "boolean", "description": "Enforce network validation."}}},
          "mtls": {"type": "object", "description": "mTLS client certificate settings.", "properties": {"enabled": {"type": "boolean", "description": "Enable mTLS mounting."}, "secretName": {"type": "string", "description": "Secret containing client.p12."}, "certPath": {"type": "string", "description": "Mount path inside container."}, "p12Base64": {"type": "string", "description": "Inline base64 client.p12 content."}}},
          "auth": {"type": "object", "description": "Credentials via existing Secret (preferred). If set, all three env vars are sourced from this Secret.", "properties": {"existingSecretName": {"type": "string", "description": "Existing Secret name containing PANGOLIN_ENDPOINT, NEWT_ID, NEWT_SECRET."}, "keys": {"type": "object", "properties": {"endpointKey": {"type": "string", "description": "Key name for endpoint in the Secret.", "default": "PANGOLIN_ENDPOINT"}, "idKey": {"type": "string", "description": "Key name for ID in the Secret.", "default": "NEWT_ID"}, "secretKey": {"type": "string", "description": "Key name for secret in the Secret.", "default": "NEWT_SECRET"}}, "additionalProperties": false}}, "additionalProperties": false},
          "updown": {"type": "object", "description": "Per-instance up/down script settings.", "properties": {"enabled": {"type": "boolean", "description": "Mount shared up/down scripts."}, "script": {"type": "string", "description": "(Deprecated) single script content."}, "mountPath": {"type": "string", "description": "Mount path for scripts."}, "fileName": {"type": "string", "description": "(Deprecated) single script name."}}},
          "podSecurityContext": {"type": "object", "description": "Instance Pod securityContext override."},
          "securityContext": {"type": "object", "description": "Instance container securityContext override."},
          "rbac": {"type": "object", "description": "Instance RBAC overrides.", "properties": {"create": {"type": "boolean", "description": "Create RBAC for this instance."}, "clusterRole": {"type": "boolean", "description": "Use cluster-wide RBAC."}, "annotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "RBAC annotations."}, "labels": {"type": "object", "additionalProperties": {"type": "string"}, "description": "RBAC labels."}}},
          "resources": {
            "type": "object",
            "description": "Resources requests/limits.",
            "properties": {
              "requests": {
                "type": "object",
                "properties": {
                  "cpu": {"type": "string", "description": "CPU request."},
                  "memory": {"type": "string", "description": "Memory request."},
                  "ephemeral-storage": {"type": "string", "description": "Ephemeral storage request."}
                }
              },
              "limits": {
                "type": "object",
                "properties": {
                  "cpu": {"type": "string", "description": "CPU limit."},
                  "memory": {"type": "string", "description": "Memory limit."},
                  "ephemeral-storage": {"type": "string", "description": "Ephemeral storage limit."}
                }
              }
            }
          },
          "service": {
            "type": "object",
            "description": "Per-instance Service settings.",
            "properties": {
              "enabled": {"type": "boolean", "description": "Create a Service for this instance."},
              "type": {"type": "string", "enum": ["ClusterIP", "LoadBalancer", "NodePort"], "description": "Kubernetes Service type"},
              "port": {"type": "integer", "description": "WireGuard UDP service port"},
              "testerPort": {"type": "integer", "description": "Tester UDP port"},
              "externalTrafficPolicy": {"type": "string", "enum": ["", "Cluster", "Local"], "description": "External traffic policy (omit when empty)"},
              "loadBalancerIP": {"type": "string", "description": "Static loadBalancerIP (omit when empty)"},
              "loadBalancerClass": {"type": "string", "description": "loadBalancerClass (omit when empty)"},
              "loadBalancerSourceRanges": {"type": "array", "items": {"type": "string"}, "description": "Source ranges (omit when empty)"},
              "nodePorts": {"type": "object", "properties": {"wg": {"type": ["integer", "string"], "description": "NodePort for wg (30000-32767)"}, "tester": {"type": ["integer", "string"], "description": "NodePort for tester (30000-32767)"}}},
              "annotations": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Service annotations"},
              "labels": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Service labels"}
            }
          },
          "nodeSelector": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Instance node selector."},
          "tolerations": {"type": "array", "items": {"type": "object"}, "description": "Instance tolerations."},
          "affinity": {"type": "object", "description": "Instance affinity rules."},
          "extraEnv": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Extra environment variables."},
          "extraVolumes": {"type": "array", "items": {"type": "object"}, "description": "Extra pod volumes."},
          "extraVolumeMounts": {"type": "array", "items": {"type": "object"}, "description": "Extra container volume mounts."},
          "initContainers": {"type": "array", "items": {"type": "object"}, "description": "Additional init containers."},
          "extraContainers": {"type": "array", "items": {"type": "object"}, "description": "Additional sidecar containers."},
          "useCommandArgs": {"type": "boolean", "description": "Use command/args instead of env injection."},
          "hostNetwork": {"type": "boolean", "description": "Enable host networking."},
          "hostPID": {"type": "boolean", "description": "Enable host PID namespace."}
        },
        "required": ["name"],
        "allOf": [
          {
            "if": {"properties": {"enabled": {"enum": [true]}}, "required": ["enabled"]},
            "then": {
              "oneOf": [
                {"required": ["auth"], "properties": {"auth": {"type": "object", "properties": {"existingSecretName": {"type": "string", "minLength": 1}}, "required": ["existingSecretName"]}}},
                {"properties": {"pangolinEndpoint": {"type": "string", "pattern": "^https?://[a-zA-Z0-9.-]+(/.*)?$"}, "id": {"type": "string", "minLength": 1}, "secret": {"type": "string", "minLength": 1}}, "required": ["pangolinEndpoint", "id", "secret"]}
              ]
            }
          }
        ]
      }
    }
  },
  "required": ["newtInstances"],
  "additionalProperties": false,
  "definitions": {}
}
